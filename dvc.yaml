stages:
  data_acquisition:
    cmd: python source/get_data.py --params=params.yaml
    deps:
    - source/get_data.py
    - params.yaml
    params:
    - data_acquisition
    outs:
    - data.zip

  data_preprocess:
    cmd: python source/data_preprocess.py --params=params.yaml
    deps:
    - source/data_preprocess.py
    - params.yaml
    params:
    - data_preprocess
    #outs :
    #- data/

  data_augmentation:
    cmd: python source/data_augmentation.py --params=params.yaml
    deps:
    - data/
    - source/data_augmentation.py
    - params.yaml
    params:
    - data_augmentation
    outs:
    - data_aug.zip

  train:
    cmd: python source/train.py --params=params.yaml
    deps:
    - source/train.py
    - params.yaml
    params:
    - train
    outs:
    - model/model_catdog.h5
    metrics:
    - metrics.json:
        cache: false

  evaluate:
    cmd: python source/evaluate.py model/model_catdog.h5 scores.json prc.json roc.json
    deps:
    - source/evaluate.py
    - model/model_catdog.h5
    metrics:
    - scores.json:
        cache: false


metrics:
- metrics/metrics.json
plots:
- dvclive/plots/custom/Precision_Recall_Metric.json:
    template: linear
    x: precision
    y: recall
    title: Precision / Recall metric.
    x_label: precision
    y_label: recall
- dvclive/plots/custom/ROC_Curve.json:
    template: linear
    x: FPR
    y: TPR
    title: ROC CURVE
    x_label: FPR
    y_label: TPR

- metrics/plots/metrics:
    x: step
